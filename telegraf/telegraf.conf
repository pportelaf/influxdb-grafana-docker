[[outputs.influxdb_v2]]
  urls = ["${TELEGRAF_INFLUXDB_URL}"]
  token = "${TELEGRAF_INFLUXDB_TOKEN}"
  organization = "${TELEGRAF_INFLUXDB_ORG}"
  bucket = "${TELEGRAF_INFLUXDB_BUCKET}"

[[inputs.mqtt_consumer]]
  servers = ["${TELEGRAF_MQTT_URL}"]
  username = "${TELEGRAF_MQTT_USER}"
  password = "${TELEGRAF_MQTT_PASSWORD}"
  topics = [
    "application/+/device/+/event/up"
  ]
  json_name_key = "object_deviceType"
  tagexclude = ["topic", "host"]
  fielddrop = ["rxInfo_0_location_altitude", "rxInfo_0_location_latitude", "rxInfo_0_location_longitude", "txInfo_frequency", "txInfo_dr", "fPort"]
  tag_keys = ["deviceName", "applicationName"]
  data_format = "json"

[[processors.rename]]
  [[processors.rename.replace]]
    tag = "applicationName"
    dest = "facility"
  [[processors.rename.replace]]
    # deviceName is formatted in processors.regex.tags (deviceName = air-quality_east => plot = east)
    tag = "deviceName"
    dest = "plot"
  [[processors.rename.replace]]
    field = "rxInfo_0_rssi"
    dest = "RSSI"
  [[processors.rename.replace]]
    field = "rxInfo_0_loRaSNR"
    dest = "SNR"
  [[processors.rename.replace]]
    field = "fCnt"
    dest = "count"

[[processors.regex]]
  [[processors.regex.tags]]
    key = "deviceName"
    pattern = ".*_(.*$)"
    replacement = "${1}"

[[processors.strings]]
  [[processors.strings.replace]]
    field_key = "*"
    old = "object_"
    new = ""

[[outputs.file]]
 files = ["/var/log/metrics.out"]
 data_format = "json"

[[outputs.file]]
  files = ["/var/log/inserts.out"]
  data_format = "influx"
  influx_sort_fields = false
  influx_uint_support = false
